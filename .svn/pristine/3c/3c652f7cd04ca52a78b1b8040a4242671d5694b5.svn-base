<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.icinfo.cs.login.mapper.PubEppasswordMapper" >
  <resultMap id="BaseResultMap" type="com.icinfo.cs.login.model.PubEppassword" >
    <!--
      WARNING - @frameworkgenerated
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="AppReviewOrg" property="apprevieworg" jdbcType="VARCHAR" />
    <result column="Password" property="password" jdbcType="VARCHAR" />
    <result column="Tel" property="tel" jdbcType="VARCHAR" />
    <result column="Username" property="username" jdbcType="VARCHAR" />
    <result column="UID" property="uid" jdbcType="VARCHAR" />
    <result column="PasID" property="pasid" jdbcType="VARCHAR" />
    <result column="PasStatus" property="passtatus" jdbcType="VARCHAR" />
    <result column="ApplyTime" property="applytime" jdbcType="TIMESTAMP" />
    <result column="LiaIDNum" property="liaidnum" jdbcType="VARCHAR" />
    <result column="LiaIDType" property="liaidtype" jdbcType="VARCHAR" />
    <result column="LiaName" property="lianame" jdbcType="VARCHAR" />
    <result column="PriPID" property="pripid" jdbcType="CHAR" />
    <result column="EntName" property="entname" jdbcType="VARCHAR" />
    <result column="RegNO" property="regno" jdbcType="CHAR" />
    <result column="LeRep" property="lerep" jdbcType="VARCHAR" />
    <result column="EntType" property="enttype" jdbcType="CHAR" />
    <result column="UniCode" property="unicode" jdbcType="CHAR" />
    <result column="CreateTime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="LeRepPhone" property="lerepphone" jdbcType="VARCHAR" />
    <result column="Dom" property="dom" jdbcType="VARCHAR" />
    <result column="RegOrg" property="regOrg" jdbcType="VARCHAR" />
    <result column="RegUnit" property="regUnit" jdbcType="VARCHAR" />
    <result column="CheckDep" property="checkDep" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
   <resultMap id="BaseExtResultMap" type="com.icinfo.cs.login.dto.PubEppasswordDto" extends="BaseResultMap" >
    <result column="CerNO" property="cerNO" jdbcType="VARCHAR" />
    <result column="RegOrgName" property="regOrgName" jdbcType="VARCHAR" />
    <result column="LocalAdmName" property="localAdmName" jdbcType="VARCHAR" />
    <result column="EstDate" property="estDate" jdbcType="TIMESTAMP" />
    <result column="SliceNOName" property="sliceNOName" jdbcType="VARCHAR" />
    <result column="EntCount" property="entCount" jdbcType="VARCHAR" />
  </resultMap>
  
  <select id="selectLoginPubEppassword" resultMap="BaseResultMap" parameterType="Map">
  	SELECT
	  id, AppReviewOrg, Password, Tel, Username, UID, PasID, PasStatus, ApplyTime, LiaIDNum, LiaIDType,
	  LiaName, PriPID, EntName, RegNO, LeRep, EntType, UniCode, CreateTime, LeRepPhone
	FROM 
	  cs_pub_eppassword
	WHERE (RegNO = #{regno,jdbcType=VARCHAR} or UniCode = #{regno,jdbcType=VARCHAR} or RegNO = #{unicode,jdbcType=VARCHAR})
	  and Password = #{password,jdbcType=VARCHAR}
	  <!--and LiaName = #{lianame,jdbcType=VARCHAR}-->
	  and LiaIDNum = #{liaidnum,jdbcType=VARCHAR}
	  and PasStatus = '01'
  </select>


  
  
     <!-- 联络员备案查询联络员信息 -->
    <select id="selectPubEppasswordList" resultMap="BaseExtResultMap" parameterType="Map">
  	SELECT
	  id, AppReviewOrg, Password, Tel, Username, UID, PasID, PasStatus, ApplyTime, LiaIDNum, LiaIDType,
	  LiaName, PriPID, EntName, RegNO, LeRep, EntType, UniCode, CreateTime, LeRepPhone
	FROM 
	  cs_pub_eppassword
	 where 1=1
	 <if test="pasentkey!=null and pasentkey !=''">
	       and ( RegNO = #{pasentkey} or UNICODE = #{pasentkey} )
	 </if>
	 <if test="regNo!=null and regNo !=''">
	       or ( RegNO = #{regNo} or UNICODE = #{regNo} )
	 </if>
	 <!-- 联络员手机号 -->
	 <if test="tel !=null and tel !=''">
	       and Tel = #{tel}
	 </if>
	 <!-- 验证码 -->
	 <if test="password !=null and password !=''">
          AND PASSWORD IS NOT NULL AND PASSWORD != '' 
	 </if>
	 <!-- 法定代表人 -->
	 <if test="leRep !=null and leRep !=''">
	       and LeRep = #{leRep}            
	 </if>
	 <!-- 名称 -->
	 <if test="entName !=null and entName !=''">
	       and EntName like CONCAT('%', #{entName},'%')            
	 </if>
	 <!-- 注册号 -->
	 <if test="regCode !=null and regCode !=''">
	       and RegNO like CONCAT('%', #{regCode},'%') or UniCode like CONCAT('%', #{regCode},'%')        
	 </if>
	 <!-- 个体户备案有效联络员查询 -->
	 <if test="passtatus !=null and passtatus !=''">
	    AND passtatus = '01' AND (enttype = '50' OR enttype = '9500' OR enttype = '4900')
	 </if>
	 
  </select>
   
   
   
   <!-- 联络员备案查询联络员信息 -->
    <select id="selectPubEppasswordListNew" resultMap="BaseExtResultMap" parameterType="Map">
  	SELECT
	  t.AppReviewOrg, t.Password, t.Tel, t.Username, t.UID, t.PasID,t.PasStatus, t.ApplyTime, t.LiaIDNum, t.LiaIDType,
	  t.LiaName, t.PriPID, t.EntName, t.RegNO, t.LeRep, 
	  (select content from cs_code_enttype where code = t.EntType ) EntType,
	  t.UniCode, t.CreateTime, t.LeRepPhone,
	  ts.dom,
      ts.RegOrgName RegOrg ,
      ts.LocalAdmName LocalAdm,
      ts.LocalAdmName regUnit,
      ts.EstDate,
      ts.SliceNOName
	FROM 
	  cs_pub_eppassword t, cs_mid_baseinfo ts
	 where 1=1 and t.pripid = ts.pripid
     <if test="regno!=null and regno !=''">
	       and ( t.RegNO = #{regno} or t.UNICODE = #{regno} )
	 </if>
	 <if test="entName!=null and entName !=''">
	       and ( t.entName = #{entName} )
	 </if>
	  <if test="leRep!=null and leRep !=''">
	       and t.LeRep = #{leRep}
	 </if>
	  <if test="liaName !=null and liaName !=''">
	       and  t.liaName  = #{liaName}
	 </if>
	 <if test="liaTel !=null and liaTel !=''">
	       and  (t.Tel = #{liaTel}  or t.LeRepPhone = #{liaTel} )
	 </if>
	 <if test="userName !=null and userName !=''">
	       and  t.userName = #{userName}
	 </if>
	 <if test="baType !=null and baType !='' and baType == 1">
	       and  t.userName is not null
	 </if>
	 <if test="baType !=null and baType !='' and baType == 0">
	       and  t.userName is null
	 </if>
	  <if test="regOrg !=null and regOrg !=''">
	       and  ts.regOrg in
     <foreach item="item" index="index" collection="regOrg" open="("
					separator="," close=")">
					#{item}
	 </foreach>  
	 </if>
	  <if test="regUnit !=null and regUnit !=''">
	       and  ts.LocalAdm in
     <foreach item="item" index="index" collection="regUnit" open="("
					separator="," close=")">
					#{item}
	 </foreach>   
	 </if>
	  <if test="appReviewOrg !=null and appReviewOrg !=''">
	       and  t.AppReviewOrg  in
     <foreach item="item" index="index" collection="appReviewOrg" open="("
					separator="," close=")">
					#{item}
	 </foreach>    
	 </if>
	 <if test="sliceNO !=null and sliceNO !=''">
	       and  ts.SliceNO  in
     <foreach item="item" index="index" collection="sliceNO" open="("
					separator="," close=")">
					#{item}
	 </foreach>    
	 </if>
	  <if test="regState !=null and regState !=''">
	       and  ts.RegState  in
     <foreach item="item" index="index" collection="regState" open="("
					separator="," close=")">
					#{item}
	 </foreach>    
	 </if>
	  <if test="entType !=null and entType !=''">
	       and  ts.EntTypeCatg  in
     <foreach item="item" index="index" collection="entType" open="("
					separator="," close=")">
					#{item}
	 </foreach>    
	 </if>
	 
	 <if test="startDate !=null and startDate !='' ">
	       and  t.ApplyTime &gt;= #{startDate}
	 </if>
	  <if test="endDate !=null and endDate !=''">
	       and  t.ApplyTime &lt;=  CONCAT(#{endDate},' 23:59:59')
	 </if>
	  <if test="estDateStart !=null and estDateStart !=''">
	       and  ts.EstDate &gt;= #{estDateStart}
	 </if>
	  <if test="estDateEnd !=null and estDateEnd !=''">
	       and  ts.EstDate &lt;=  CONCAT(#{estDateEnd},' 23:59:59')
	 </if>
	 <include refid="com.icinfo.cs.system.mapper.CSMapper.defaultByOrgCode"/>
	 order by t.ApplyTime desc
  </select>
  
  <!-- 获取打印数据 -->
   <select id="selectPubEppasswordForPrint" resultMap="BaseResultMap" parameterType="Map">
  	SELECT
	  a.id, AppReviewOrg, Password, Tel, Username, a.UID, PasID, PasStatus, ApplyTime, LiaIDNum, LiaIDType,
	  LiaName, PriPID, EntName, RegNO, LeRep, EntType, UniCode, CreateTime, LeRepPhone
	FROM 
	 cs_pub_eppassword a 
     <!-- 获取打印数据时关联用户表 -->	 
     LEFT JOIN SYS_USER  b on a.Username = b.USER_USERNAME
	 where RegNO = #{regno} and PasID = #{pasid}
  </select>
  
  
  <select id="selectLiaInfo" resultMap="BaseResultMap" parameterType="Map">
  	SELECT
		PriPID, LiaName, Tel ,LeRep , LeRepPhone ,update_time
	FROM 
	 	cs_pub_eppassword   
    where PriPid in 
    <foreach collection="priPidList" item="priPidList" index="index"  open="(" close=")" separator=",">
         #{priPidList}
    </foreach>
  </select>
  
  
  
    <!-- 个体户登录校验码查询 -->
    <select id="selectPbEppasswordList" resultMap="BaseExtResultMap" parameterType="Map">
  	SELECT
	  a.id, a.AppReviewOrg, a.Password, a.Tel, a.Username, a.UID, a.PasID, a.PasStatus, a.ApplyTime, a.LiaIDNum, a.LiaIDType,
	  a.LiaName, a.PriPID, a.EntName, a.RegNO, a.LeRep, a.EntType, a.UniCode, a.CreateTime, a.LeRepPhone,
	  b.RegOrgName,b.LocalAdmName
	FROM  cs_pub_eppassword a 
	LEFT JOIN cs_mid_baseinfo b 
	ON a.PriPID = b.PriPID
	WHERE 
	b.pripid IS NOT NULL 
	AND passtatus = '01' AND (a.enttype = '50' OR a.enttype = '9500' OR a.enttype = '4900') AND PASSWORD IS NOT NULL 
	AND b.EntTypeCatg = '50'
	AND b.RegState IN (${regState})
     <if test="regNo!=null and regNo !=''">
	       and ( a.RegNO = #{regNo} or a.UNICODE = #{regNo} )
	 </if>
	 <if test="tel !=null and tel !=''">
	       and a.tel = #{tel}
	 </if>
	 <if test="entName !=null and entName !=''">
	       and a.entName = #{entName}
	 </if>
	<include refid="com.icinfo.cs.system.mapper.CSMapper.defaultByOrgCode"/>
  </select>
  
  <!-- 根据联络电话获取3条企业名称数据 -->
  <select id="queryEntNameFirst3ListByPubEppasswordTel" resultType="String" parameterType="java.lang.String">
  	SELECT
		cpe.EntName
	FROM
		cs_pub_eppassword cpe
	INNER JOIN cs_mid_baseinfo cmb ON cpe.PriPID = cmb.PriPID
	WHERE
		cpe.Tel = #{tel}
	AND cmb.enttypecatg != '50'
	AND cmb.RegState IN (${regState})
	<![CDATA[AND cmb.EstDate < CONCAT(DATE_FORMAT(NOW(), '%Y'),'-01-01')]]>
	AND cpe.EntName IS NOT NULL
	AND TRIM(cpe.EntName) != ''
	LIMIT 3
  </select>
  
  <!-- 获取联络员年报信息列表 -->
  <select id="queryYearReportList" resultMap="BaseExtResultMap" parameterType="Map">
		SELECT
			a.Tel,
			substring_index(
				group_concat(b.EntName),
				',',
				2
			) EntName,
			count(*) EntCount
		FROM
			cs_pub_eppassword a
		INNER JOIN cs_yr_reg_check b ON a.pripid = b.pripid
		INNER JOIN cs_mid_baseinfo c ON b.PriPID = c.PriPID
		WHERE
			b. YEAR =#{year} 
		AND b.isreported = #{isreported}
		AND c.enttypecatg != '50'
		AND c.RegState IN (${regState})
		<![CDATA[AND c.EstDate < CONCAT(DATE_FORMAT(NOW(), '%Y'),'-01-01')	]]>
		GROUP BY
			a.tel
		LIMIT ${numStart},${pageSize} 
  </select>
  
    <!-- 获取联络员年报信息列表-总数 -->
  <select id="queryYearReportCount" resultType="Long" parameterType="Map">
  		select count(0) from (
	      	SELECT
				a.Tel
			FROM
				cs_pub_eppassword a
			INNER JOIN cs_yr_reg_check b ON a.pripid = b.pripid
			INNER JOIN cs_mid_baseinfo c ON b.PriPID = c.PriPID
			WHERE
				b. YEAR =#{year} 
			AND b.isreported = #{isreported}
			AND c.enttypecatg != '50'
			AND c.RegState IN (${regState})
			<![CDATA[AND c.EstDate < CONCAT(DATE_FORMAT(NOW(), '%Y'),'-01-01')	]]>
			GROUP BY
				a.tel) t
  </select>
  
  <!-- 根据年份、是否年报、联络员手机获取企业名称列表 -->
  <select id="queryEntNameList" resultMap="BaseExtResultMap" parameterType="Map">
		SELECT
			b.EntName
		FROM
			cs_pub_eppassword a
		INNER JOIN cs_yr_reg_check b ON a.pripid = b.pripid
		INNER JOIN cs_mid_baseinfo c ON b.PriPID = c.PriPID
		WHERE
			b. YEAR =#{year} 
		AND b.isreported = #{isreported}
		AND c.enttypecatg != '50'
		AND c.RegState IN (${regState})
		<![CDATA[AND c.EstDate < CONCAT(DATE_FORMAT(NOW(), '%Y'),'-01-01')	]]>
		AND a.tel=#{tel}
  </select>
  
  
  <!-- 企信联连异常消息推送获取联络员 -->
  <select id="queryPubEppasswordPsList" resultMap="BaseExtResultMap" parameterType="Map">
		<!-- SELECT
			a.PriPID,a.EntName,a.tel
		FROM
			cs_pub_eppassword a
		INNER JOIN cs_mid_baseinfo c ON a.PriPID = c.PriPID
		WHERE
		<![CDATA[
	     c.enttypecatg != '50'
	    AND a.PasStatus='01'
		AND c.RegState IN (${regState})
		]]>
		GROUP BY a.tel 
		LIMIT ${numStart},${pageSize}  --> 
		SELECT
			a.Tel,
			substring_index(
				group_concat(DISTINCT b.EntName),
				',',
				2
			) EntName,
			a.uid,
			a.LiaName,
			count(DISTINCT a.PriPID) EntCount
		FROM
			cs_pub_eppassword a
		INNER JOIN cs_pub_opanomaly b ON a.pripid = b.pripid
		INNER JOIN cs_mid_baseinfo c ON b.PriPID = c.PriPID
		WHERE
			c.enttypecatg != '50'
		AND b.AuditState = '1'
		AND (
			b.RevokeFlag IS NULL
			OR b.RevokeFlag = ''
		)
		AND a.PasStatus = '01'
		AND c.RegState IN (${regState})
		AND NOT EXISTS (
			SELECT
				1
			FROM
				cs_pub_opadetail D
			WHERE
				b.BusExcList = D.BusExcList
			AND IsMove = '1'
			AND D.AuditState = '1'
		)
		GROUP BY
			a.tel
		LIMIT  ${numStart},${pageSize}
  </select>
  
    <!-- 企信联连异常消息推送 -->
    <select id="queryPubEppasswordPsCount" resultType="Long" parameterType="Map">
  		<!-- SELECT
			 COUNT(DISTINCT a.Tel)
		FROM
			cs_pub_eppassword a
		INNER JOIN cs_mid_baseinfo c ON a.PriPID = c.PriPID
		WHERE
		<![CDATA[
	    c.enttypecatg != '50'
	    AND a.PasStatus='01'
		AND c.RegState IN (${regState})
		]]>  --> 
		SELECT
			COUNT(0)
		FROM
			(
				SELECT
					a.Tel
				FROM
					cs_pub_eppassword a
				INNER JOIN cs_pub_opanomaly b ON a.pripid = b.pripid
				INNER JOIN cs_mid_baseinfo c ON b.PriPID = c.PriPID
				WHERE
					c.enttypecatg != '50'
				AND b.AuditState = '1'
				AND (
					b.RevokeFlag IS NULL
					OR b.RevokeFlag = ''
				)
				AND a.PasStatus = '01'
				AND c.RegState IN (${regState})
				AND NOT EXISTS (
					SELECT
						1
					FROM
						cs_pub_opadetail D
					WHERE
						b.BusExcList = D.BusExcList
					AND IsMove = '1'
					AND D.AuditState = '1'
				)
				GROUP BY
					a.tel
			) t
  </select>
  
  
    <!-- 企信联连即时消息推送 -->
    <select id="queryPubEppasswordImInfoCount" resultType="Long" parameterType="Map"> 
		SELECT
			COUNT(0)
			FROM
				(
					SELECT
						f.Tel
					FROM
						cs_pub_eppassword f
					INNER JOIN (
						SELECT
							e.PriPID,
							e.LiAcConAM,
							e.LiSubConAM
						FROM
							cs_mid_baseinfo c
						INNER JOIN (
							SELECT
								a.PriPID,
								IFNULL(SUM(a.LiAcConAM), 0) LiAcConAM,
								IFNULL(SUM(a.LiSubConAM), 0) LiSubConAM
							FROM
								cs_im_investment a
							GROUP BY
								a.PriPID
						) e ON c.PriPID = e.PriPID
						WHERE
						<![CDATA[ 
						(c.RegCap != e.LiSubConAM 
						 OR c.PriPID IN (
							SELECT
							s.PriPID
								FROM
									cs_im_investment s
								INNER JOIN cs_im_invprodetail g ON s.InvID = g.InvID
								WHERE
									g.ConDate <#{nowDate}
								AND  (s.LiAcConAM IS NULL or s.LiAcConAM ='') 
							)
						) 	
						AND c.RegState IN (${regState})
						AND c.EntTypeCatg IN ('11', '21')
						AND c.EntType NOT IN (
							'1200',
							'1210',
							'1211',
							'1212',
							'1213',
							'1219',
							'1220',
							'1221',
							'1222',
							'1223',
							'1229',
							'5200',
							'5210',
							'5220',
							'5230',
							'5240',
							'5290',
							'6200',
							'6210',
							'6220',
							'6230',
							'6240',
							'6250',
							'6260',
							'6270',
							'6280',
							'6290'
						)
					) g ON g.PriPID = f.PriPID
					GROUP BY
						f.tel
				) t
				]]>
  </select>
  
  
  <!-- 企信联连即时消息推送获取联络员 -->
  <select id="queryPubEppasswordImInfoList" resultMap="BaseExtResultMap" parameterType="Map"> 
		SELECT
			f.Tel,
			substring_index(
				group_concat(DISTINCT f.EntName),
				',',
				2
			) EntName,
			f.uid,
			f.LiaName,
			count(DISTINCT f.PriPID) EntCount
		FROM
			cs_pub_eppassword f
		INNER JOIN (
			SELECT
				e.PriPID,
				e.LiAcConAM,
				e.LiSubConAM
			FROM
				cs_mid_baseinfo c
			INNER JOIN (
				SELECT
					a.PriPID,
					IFNULL(SUM(a.LiAcConAM), 0) LiAcConAM,
					IFNULL(SUM(a.LiSubConAM), 0) LiSubConAM
				FROM
					cs_im_investment a
				GROUP BY
					a.PriPID
			) e ON c.PriPID = e.PriPID
			WHERE
			<![CDATA[ 
			(
			c.RegCap != e.LiSubConAM  
				OR c.PriPID IN (
					SELECT
						s.PriPID
					FROM
						cs_im_investment s
					INNER JOIN cs_im_invprodetail g ON s.InvID = g.InvID
					WHERE
						g.ConDate <#{nowDate}
					AND  (s.LiAcConAM IS NULL or s.LiAcConAM ='')
				)
			)	
			AND c.RegState IN (${regState})
			AND c.EntTypeCatg IN ('11', '21')
			AND c.EntType NOT IN (
				'1200',
				'1210',
				'1211',
				'1212',
				'1213',
				'1219',
				'1220',
				'1221',
				'1222',
				'1223',
				'1229',
				'5200',
				'5210',
				'5220',
				'5230',
				'5240',
				'5290',
				'6200',
				'6210',
				'6220',
				'6230',
				'6240',
				'6250',
				'6260',
				'6270',
				'6280',
				'6290'
			)
		) g ON g.PriPID = f.PriPID
		  
		GROUP BY
			f.tel
		LIMIT  ${numStart},${pageSize}
		]]>
  </select> 
  
  
  <!-- 根据电话号码查询即时信息 -->
  <select id="queryPubEppasswordImInfoBytelList" resultMap="BaseExtResultMap" parameterType="Map"> 
		SELECT
			c.PriPID,
			c.UniCode,
			c.EntName,
			c.RegNO
		FROM
			cs_mid_baseinfo c
		INNER JOIN (
			SELECT
				b.PriPID,
				IFNULL(SUM(b.LiAcConAM), 0) LiAcConAM,
				IFNULL(SUM(b.LiSubConAM), 0) LiSubConAM
			FROM
				cs_im_investment b
			WHERE
				b.PriPID IN (
					SELECT
						a.PriPID
					FROM
						cs_pub_eppassword a
					WHERE
						a.Tel = #{tel} 
				)
			GROUP BY
				b.PriPID
		) d ON c.PriPID = d.PriPID
		WHERE
		<![CDATA[ 
		  (c.RegCap != d.LiSubConAM  OR c.PriPID IN (
				SELECT
					s.PriPID
				FROM
					cs_im_investment s
				INNER JOIN cs_im_invprodetail g ON s.InvID = g.InvID
				WHERE
					g.ConDate <#{nowDate}
				AND  (s.LiAcConAM IS NULL or s.LiAcConAM ='')
			)
		  )	  
		AND c.RegState IN (${regState})
		AND c.EntTypeCatg IN ('11', '21')
		AND c.EntType NOT IN (
			'1200',
			'1210',
			'1211',
			'1212',
			'1213',
			'1219',
			'1220',
			'1221',
			'1222',
			'1223',
			'1229',
			'5200',
			'5210',
			'5220',
			'5230',
			'5240',
			'5290',
			'6200',
			'6210',
			'6220',
			'6230',
			'6240',
			'6250',
			'6260',
			'6270',
			'6280',
			'6290'
		)
		]]>
  </select> 
</mapper>