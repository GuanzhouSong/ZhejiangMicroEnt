<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.icinfo.cs.creditprove.mapper.CreditProveInfoMapper" >
  <resultMap id="BaseResultMap" type="com.icinfo.cs.creditprove.model.CreditProveInfo" >
    <!--
      WARNING - @frameworkgenerated
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="UID" property="uid" jdbcType="VARCHAR" />
    <result column="PriPID" property="priPID" jdbcType="CHAR" />
    <result column="UniSCID" property="uniSCID" jdbcType="CHAR" />
    <result column="EntName" property="entName" jdbcType="VARCHAR" />
    <result column="RegNO" property="regNO" jdbcType="CHAR" />
    <result column="CerNO" property="cerNO" jdbcType="VARCHAR" />
    <result column="SetDate" property="setDate" jdbcType="TIMESTAMP" />
    <result column="ProveStartDate" property="proveStartDate" jdbcType="DATE" />
    <result column="ProveEntDate" property="proveEntDate" jdbcType="DATE" />
    <result column="ProveType" property="proveType" jdbcType="CHAR" />
    <result column="ProveNo" property="proveNo" jdbcType="VARCHAR" />
    <result column="SetName" property="setName" jdbcType="VARCHAR" />
    <result column="SetDept" property="setDept" jdbcType="VARCHAR" />
    <result column="AdCode" property="adCode" jdbcType="VARCHAR" /> 
    <result column="Name" property="name" jdbcType="VARCHAR" />
    <result column="CreateTime" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <resultMap id="BaseResultMapDto" type="com.icinfo.cs.creditprove.dto.CreditProveInfoDto" extends="BaseResultMap">
       <id column="PrintCount" property="printCount" jdbcType="INTEGER" />
   </resultMap> 
  
  <!-- 总共单数 -->
  <select id="selectProveInfoCount" parameterType="Map"   resultType="Integer">
     select COUNT(DISTINCT ProveNo) from cs_credit_prove_info a where 1=1 
     <include refid="proveCount_where"></include>
  </select> 
  
  
   <!-- 企业户数 -->
  <select id="selectEntCount" parameterType="Map"   resultType="Integer">
     select COUNT(DISTINCT PriPID) from cs_credit_prove_info a where 
     a.ProveType='1'
     <include refid="proveCount_where"></include> 
  </select> 
  
  
   <!-- 自然人 -->
  <select id="selectManCount" parameterType="Map"   resultType="Integer">
     select COUNT(DISTINCT CerNO) from cs_credit_prove_info a where 
     a.ProveType='2'
     <include refid="proveCount_where"></include>
  </select> 
  
  
   <!-- 根据类型获取单号 -->
  <select id="selectProveNoByProveType" parameterType="Map"   resultType="Integer">
     select MAX(RIGHT(ProveNo, 4)) from cs_credit_prove_info where 
     ProveType = #{proveType} and LEFT(ProveNo,9)=#{nowDateStr}
  </select> 
  
  
  
  <!--分页查询出证信息 -->
  <select id="selectCreditProveInfoJSON" resultMap="BaseResultMapDto" parameterType="Map">
   SELECT 
   a.UID,
   a.PriPID,
   a.UniSCID,
   a.EntName,
   a.RegNO, 
   a.CerNO,
   a.SetDate,
   a.ProveStartDate,
   a.ProveEntDate,
   a.ProveType,
   a.ProveNo,
   a.SetName,
   a.SetDept,
   (
		SELECT
			COUNT(b.UID)
		FROM
			cs_credit_prove_print b
		WHERE
			a.ProveNo = b.ProveNo
	) PrintCount,
   Name
     from  cs_credit_prove_info  a
    where 1=1
    <include refid="proveCount_where"></include> 
    ORDER BY  a.SetDate desc 
  </select>
  
  
   <sql id="proveCount_where"> 
   		<!-- <if test="searchFlag !='' and searchFlag !=null and searchFlag==0 "> -->
			and a.AdCode = #{deptCode} 
		<!-- </if> -->
		<if test="proveType !='' and proveType !=null">
			and a.ProveType in (${proveType})
		</if>
		<if test="cidRegNO !='' and cidRegNO !=null">
			and (a.UniSCID LIKE concat('%', #{cidRegNO},'%')
			or  a.RegNO LIKE concat('%', #{cidRegNO},'%')
			or a.CerNO LIKE concat('%', #{cidRegNO},'%') )   
		</if>
		<if test="cidRegNO4 !='' and cidRegNO4 !=null">
			and (RIGHT(a.UniSCID,4)=#{cidRegNO4} 
			or RIGHT(a.RegNO,4)=#{cidRegNO4} 
			or RIGHT(a.CerNO,4)=#{cidRegNO4})   
		</if>
		<if test="setDept !='' and setDept !=null">
			and a.SetDept LIKE concat('%', #{setDept},'%')
		</if>
		<if test="setName !='' and setName !=null">
			and a.SetName LIKE concat('%', #{setName},'%')
		</if>
		<if test="proveNo !='' and proveNo !=null">
			and a.ProveNo LIKE concat('%', #{proveNo},'%')
		</if>
		<if test="startInfaustlDate !='' and startInfaustlDate !=null">
		<![CDATA[and  LEFT(a.SetDate,10)>=#{startInfaustlDate}]]>  
		</if>
		<if test="endInfaustlDate !='' and endInfaustlDate !=null">
		<![CDATA[	
			and  LEFT(a.SetDate,10)<=#{endInfaustlDate} 
		]]>  
		</if>
		<if test="cname!='' and cname !=null">
			and (
			    EntName LIKE concat('%', #{cname},'%') or  Name LIKE concat('%', #{cname},'%')
			)  
		</if>
  </sql>
</mapper>